{"version":3,"sources":["components/RepetitionExercise/index.js","components/DurationExercise/index.js","components/Exercise/index.js","components/Quote/index.js","components/TodoList/index.js","App.js","reportWebVitals.js","index.js"],"names":["RepetitionExercise","props","state","value","this","setState","prevState","name","onClick","addOne","React","Component","DurationExercise","strValue","time","timer","setInterval","clearInterval","startTimer","stopTimer","HOME","DURATION_SCREEN","REPETITION_SCREEN","Exercise","currentScreen","selectedItem","undefined","screen","exerType","map","exer","index","quotes","Quote","todoList","id","completed","description","TodoList","completeItem","itemId","prevList","itemIndex","findIndex","item","handleKeyPress","event","key","addTodoItem","prevValue","inputRef","current","curId","createRef","checkRef","filterRef","length","filtered","filter","ref","type","onChange","defaultChecked","style","textDecoration","class","prev","padding","onKeyPress","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAEqBA,E,kDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,MAAO,EAAKF,MAAME,OAHR,E,0CAMlB,WACIC,KAAKC,UAAS,SAACC,GAAD,MAAgB,CAC1BH,MAAOG,EAAUH,MAAQ,Q,oBAGjC,WAAS,IAAD,OACJ,OACI,qCACI,4BAAIC,KAAKH,MAAMM,OACf,iDAAoBH,KAAKF,MAAMC,SAC/B,wBAAQK,QAAS,kBAAM,EAAKC,UAA5B,iC,GAjBgCC,IAAMC,WCAjCC,E,kDACjB,WAAYX,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,MAAO,EAAKF,MAAMY,SAClBC,KAAM,GAJQ,E,8CAOlB,WAAc,IAAD,OACTV,KAAKW,MAAQC,aAAY,kBAAM,EAAKX,SAAS,CAC3CS,KAAM,EAAKZ,MAAMY,KAAO,MACtB,O,uBAER,WACIG,cAAcb,KAAKW,S,oBAEvB,WAAU,IAAD,OACP,OACE,gCACI,4BAAIX,KAAKH,MAAMM,OACf,wCAAWH,KAAKF,MAAMY,KAAtB,UACA,wBAAQN,QAAS,kBAAM,EAAKU,cAA5B,mBACA,wBAAQV,QAAS,kBAAM,EAAKW,aAA5B,yB,GAtBkCT,IAAMC,WCE9CS,EAAO,OACPC,EAAkB,WAClBC,EAAoB,aAELC,E,kDACnB,WAAYtB,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CAACsB,cAAeJ,EAAMK,kBAAcC,GAFjC,E,0CAIhB,WAAS,IASLC,EATI,OAUL,OAAQvB,KAAKF,MAAMsB,eACjB,KAAKJ,EACHO,EACG,mCACE,6BAbO,CACd,CAACC,SAAU,aAAcrB,KAAM,cAAeJ,MAAO,GACrD,CAACyB,SAAU,WAAYrB,KAAM,iBAAkBM,SAAU,aACzD,CAACe,SAAU,aAAcrB,KAAM,oBAAqBJ,MAAO,GAC3D,CAACyB,SAAU,WAAYrB,KAAM,UAAWM,SAAU,aAClD,CAACe,SAAU,aAAcrB,KAAM,wBAAyBJ,MAAO,GAC/D,CAACyB,SAAU,WAAYrB,KAAM,kBAAmBM,SAAU,cAQtCgB,KAAI,SAACC,EAAMC,GAAP,MACK,eAAlBD,EAAKF,SACL,6BACE,wBAAQpB,QAAS,kBAAM,EAAKH,SAAS,CAACmB,cAAcF,EAAmBG,aAAcK,KAArF,SAA8FA,EAAKvB,QAD5FwB,GAIX,6BACE,wBAAQvB,QAAS,kBAAM,EAAKH,SAAS,CAACmB,cAAcH,EAAiBI,aAAcK,KAAnF,SAA4FA,EAAKvB,QAD1FwB,UAOhB,MACD,KAAKV,EACDM,EACE,qCACA,cAAC,EAAD,eAAsBvB,KAAKF,MAAMuB,eACjC,wBAAQjB,QAAU,kBAAM,EAAKH,SAAS,CAACmB,cAAcJ,KAArD,qBAEJ,MACF,KAAKE,EACDK,EACE,qCACA,cAAC,EAAD,eAAwBvB,KAAKF,MAAMuB,eACnC,wBAAQjB,QAAU,kBAAM,EAAKH,SAAS,CAACmB,cAAcJ,KAArD,qBAIZ,OAAOO,M,GAjD2BjB,IAAMC,WCNtCqB,EAAS,CAAC,wFAOKC,E,kDACjB,WAAYhC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CAAC8B,UAFA,E,0CAIlB,WACI,IAAIA,EAAS5B,KAAKF,MAAM8B,OACxB,OACI,8BACI,4BAAIA,U,GATetB,IAAMC,WCLrCuB,EAAW,CACb,CACEC,GAAG,EACHC,WAAU,EACVC,YAAa,oCAEf,CACEF,GAAG,EACHC,WAAU,EACVC,YAAa,uBAIIC,E,kDACnB,WAAYrC,GAAO,IAAD,uBAChB,cAAMA,IAMRsC,aAAe,SAACC,GACd,EAAKnC,UAAS,SAACC,GACb,IAAImC,EAAWnC,EAAU4B,SACrBQ,EAAYD,EAASE,WAAU,SAACC,GAAD,OAAUA,EAAKT,KAAOK,KAKzD,OAJEC,EAASC,GAAT,2BACOD,EAASC,IADhB,IAEIN,WAAYK,EAASC,GAAWN,YAE/B,CAACF,SAAS,YAAIO,QAfP,EAkBlBI,eAAiB,SAACC,GACE,UAAdA,EAAMC,KACR,EAAKC,eApBS,EAuBlBA,YAAc,WACZ,IAAIC,EAAY,EAAK/C,MAAMgD,SAASC,QAAQhD,MAC5C,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1B4B,SAAS,GAAD,mBAAK5B,EAAU4B,UAAf,CACN,CAACE,WAAU,EAAOC,YAAaY,EAAWd,GAAG7B,EAAU8C,SACvDA,MAAM9C,EAAU8C,MAAM,MAE1B,EAAKlD,MAAMgD,SAASC,QAAQhD,MAAQ,IA5BpC,IAAI+C,EAAWxC,IAAM2C,YACjBC,EAAW5C,IAAM2C,YACjBE,EAAY7C,IAAM2C,YAJN,OAKhB,EAAKnD,MAAQ,CAACgC,WAAUkB,MAAMlB,EAASsB,OAAO,EAAGN,WAAUI,WAAUC,YAAWE,UAAS,GALzE,E,0CAgClB,WAAU,IAAD,OACHvB,EAAW9B,KAAKF,MAAMgC,SAa5B,OAZQ9B,KAAKF,MAAMuD,WACbvB,EAAWA,EAASwB,QAAO,SAAAd,GAAI,OAAKA,EAAKR,cAG3CF,EAAWA,EAASL,KAAI,SAACe,GAAD,OACtB,8BACE,kCACE,uBAAOe,IAAK,EAAKzD,MAAMoD,SAAUM,KAAK,WAAWC,SAAU,kBAAM,EAAKtB,aAAaK,EAAKT,KAAK2B,eAAgBlB,EAAKR,YAClH,sBAAM2B,MAAOnB,EAAKR,UAAY,CAAC4B,eAAgB,qBAAkBtC,EAAjE,SAA6EkB,EAAKP,kBAH5EO,EAAKT,OAQnB,qCACE,8CACF,sBAAK8B,MAAM,OAAX,UACE,kCACE,wDACA,uBAAON,IAAKvD,KAAKF,MAAMqD,UAAWK,KAAK,WACrCC,SAAU,kBAAM,EAAKxD,UAAS,SAAC6D,GAAD,MAAW,CAACT,UAAWS,EAAKT,cAC1DK,gBAAgB,OAGpB,qBAAKC,MAAO,CAACI,QAAQ,OAArB,SACGjC,IAEH,uBAAOkC,WAAY,SAACtB,GAAD,OAAW,EAAKD,eAAeC,IAAQa,IAAKvD,KAAKF,MAAMgD,SAAUU,KAAK,OAAOS,YAAY,YAC5G,wBAAQ7D,QAAS,kBAAM,EAAKwC,eAA5B,2BACE,uBACF,mDACI,cAAC,EAAD,IAAQ,uBACV,uBACF,qDACE,cAAC,EAAD,c,GApE8BtC,IAAMC,WCP7B2D,MANf,WACE,OACE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4954e2a6.chunk.js","sourcesContent":["import React from'react';\r\n\r\nexport default class RepetitionExercise extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = { \r\n            value: this.props.value\r\n        }\r\n    }\r\n    addOne(){\r\n        this.setState((prevState) => ({\r\n            value: prevState.value + 1,\r\n        }))\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                <p>{this.props.name}</p>\r\n                <p>Reps Completed: {this.state.value}</p>\r\n                <button onClick={() => this.addOne()}>Complete Rep</button>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class DurationExercise extends React.Component{\r\n    constructor(props){\r\n      super(props)\r\n      this.state = {\r\n        value: this.props.strValue,\r\n        time: 0\r\n      }\r\n     }\r\n    startTimer() {\r\n        this.timer = setInterval(() => this.setState({\r\n          time: this.state.time + 1\r\n        }), 1000)\r\n      }\r\n    stopTimer() {\r\n        clearInterval(this.timer)\r\n      }\r\n    render() {\r\n      return(\r\n        <div>\r\n            <p>{this.props.name}</p>\r\n            <p>Timer: {this.state.time} sec</p>\r\n            <button onClick={() => this.startTimer()}>Start</button>\r\n            <button onClick={() => this.stopTimer()}>Stop</button>\r\n        </div>\r\n      );\r\n    }\r\n}","import React from 'react';\r\nimport RepetitionExercise from '../RepetitionExercise';\r\nimport DurationExercise from '../DurationExercise';\r\n\r\nconst HOME = \"home\"\r\nconst DURATION_SCREEN = \"duration\"\r\nconst REPETITION_SCREEN = \"repetition\"\r\n\r\nexport default class Exercise extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {currentScreen: HOME, selectedItem: undefined}\r\n  }\r\n    render(){\r\n       let exercises = [\r\n         {exerType: \"repetition\", name: \"Arm Circles\", value: 0},\r\n         {exerType: \"duration\", name: \"Tricep Pushups\", strValue: \"duration1\" },\r\n         {exerType: \"repetition\", name: \"Lateral Pull Down\", value: 0},\r\n         {exerType: \"duration\", name: \"Burpees\", strValue: \"duration2\"},   \r\n         {exerType: \"repetition\", name: \"Dumbbell Arnold Press\", value: 0},\r\n         {exerType: \"duration\", name: \"Plank Rotations\", strValue: \"duration3\"},       \r\n       ]\r\n    let screen\r\n       switch (this.state.currentScreen) {\r\n         case HOME:\r\n           screen =\r\n              <>\r\n                <ul>\r\n                  {exercises.map((exer, index) =>\r\n                    exer.exerType === \"repetition\" ? (\r\n                    <li key={index}>\r\n                      <button onClick={() => this.setState({currentScreen:REPETITION_SCREEN, selectedItem: exer})}>{exer.name}</button>\r\n                    </li>  \r\n                   ) : (\r\n                  <li key={index}>\r\n                    <button onClick={() => this.setState({currentScreen:DURATION_SCREEN, selectedItem: exer})}>{exer.name}</button>\r\n                  </li> \r\n                   )\r\n                  )}\r\n                </ul>\r\n              </>\r\n           break;\r\n          case DURATION_SCREEN:\r\n              screen = \r\n                <>\r\n                <DurationExercise {...this.state.selectedItem}></DurationExercise>\r\n                <button onClick={ () => this.setState({currentScreen:HOME})}>Back</button>\r\n                </>\r\n            break;\r\n          case REPETITION_SCREEN:\r\n              screen = \r\n                <>\r\n                <RepetitionExercise {...this.state.selectedItem}></RepetitionExercise>\r\n                <button onClick={ () => this.setState({currentScreen:HOME})}>Back</button>\r\n                </>\r\n            break;\r\n       }\r\n    return screen\r\n    }\r\n  }","import React from 'react';\r\n\r\nconst quotes = [\r\n    `\"Never let the fear of striking out keep you from playing the game\" ― Babe Ruth`,\r\n    //`\"If you focus on what you left behind, you will never see what lies ahead.\"— Gusteau, Ratatouille`,\r\n    //`\"The way to get started is to quit talking and begin doing.\" — Walt Disney`,\r\n    //`\"It’s never too early for ice cream.\" — Michael Scott, The Office`,   \r\n]\r\n\r\nexport default class Quote extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {quotes}\r\n    }\r\n    render(){\r\n        let quotes = this.state.quotes\r\n        return(\r\n            <div>\r\n                <p>{quotes}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//let index = Math.floor (Math.random() * 4);\r\n//console.log(quotes[index])","import React from 'react';\r\nimport Exercise from '../Exercise';\r\nimport Quote from '../Quote';\r\n\r\nlet todoList = [\r\n  {\r\n    id:1,\r\n    completed:true,\r\n    description: \"Complete a TODO list application\",\r\n  },\r\n  {\r\n    id:2,\r\n    completed:false,\r\n    description: \"Workout of the Day\",\r\n  },\r\n]\r\n\r\nexport default class TodoList extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    let inputRef = React.createRef()\r\n    let checkRef = React.createRef()\r\n    let filterRef = React.createRef()\r\n    this.state = {todoList, curId:todoList.length+1, inputRef, checkRef, filterRef, filtered:false}\r\n  }\r\n  completeItem = (itemId) =>{\r\n    this.setState((prevState) =>{\r\n      let prevList = prevState.todoList\r\n      let itemIndex = prevList.findIndex((item) => item.id === itemId)\r\n        prevList[itemIndex] = {\r\n            ...prevList[itemIndex],\r\n            completed: !prevList[itemIndex].completed,\r\n      }\r\n      return {todoList:[...prevList]}\r\n    })\r\n  }\r\n  handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\"){\r\n      this.addTodoItem()\r\n    }\r\n  }\r\n  addTodoItem = () => {\r\n    let prevValue = this.state.inputRef.current.value\r\n    this.setState(prevState => ({\r\n      todoList:[...prevState.todoList,\r\n        {completed:false, description: prevValue, id:prevState.curId}],\r\n        curId:prevState.curId+1\r\n      }))\r\n    this.state.inputRef.current.value = \"\"\r\n  }\r\n  render() {\r\n    let todoList = this.state.todoList\r\n      if (this.state.filtered) {\r\n        todoList = todoList.filter(item => !item.completed)\r\n      }\r\n\r\n      todoList = todoList.map((item) =>(\r\n        <div key={item.id}>\r\n          <label>\r\n            <input ref={this.state.checkRef} type=\"checkbox\" onChange={() => this.completeItem(item.id)} defaultChecked={item.completed}></input>\r\n            <span style={item.completed ? {textDecoration: \"line-through\"} : undefined}>{item.description}</span>\r\n          </label>\r\n        </div>\r\n    ))\r\n  return(\r\n    <>\r\n      <h1>Things to do</h1>\r\n    <div class=\"page\">\r\n      <label>\r\n        <p>Filter completed items?</p>\r\n        <input ref={this.state.filterRef} type=\"checkbox\"\r\n          onChange={() => this.setState((prev) => ({filtered: !prev.filtered}))}\r\n          defaultChecked={false}></input>\r\n      </label>\r\n          \r\n      <div style={{padding:\"5px\"}}>\r\n        {todoList}\r\n      </div>\r\n      <input onKeyPress={(event) => this.handleKeyPress(event)} ref={this.state.inputRef} type=\"text\" placeholder=\"TODO...\"></input>\r\n      <button onClick={() => this.addTodoItem()}>Add TODO item</button>\r\n        <hr></hr>\r\n      <h3>Quote of the day:</h3>\r\n          <Quote/><br/>\r\n        <hr></hr>\r\n      <h3>Workout of the day:</h3>\r\n        <Exercise />\r\n    </div>\r\n    </>\r\n  )\r\n  }\r\n}","import './App.css';\nimport React from 'react';\nimport TodoList from './components/TodoList';\n\nfunction App(){\n  return(\n    <TodoList />\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}